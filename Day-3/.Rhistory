#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = unique(pca_df$col), cex = 0.6)
meta_ord <- meta[meta$Biosample.term.name=="forebrain" | meta$Biosample.term.name=="heart" |
meta$Biosample.term.name=="hindbrain" | meta$Biosample.term.name=="liver" |
meta$Biosample.term.name=="skeletal muscle tissue",]
#annotation_col = data.frame(LeukemiaType =substr(colnames(mat),1,3))
annotation_col = data.frame(Tissue = meta_ord$Biosample.term.name)
rownames(annotation_col) = meta_ord$File.accession
meta_ord <- meta[order(meta$Biosample.term.name),]
meta_ord <- meta[meta$Biosample.term.name=="forebrain" | meta$Biosample.term.name=="heart" |
meta$Biosample.term.name=="hindbrain" | meta$Biosample.term.name=="liver" |
meta$Biosample.term.name=="skeletal muscle tissue",]
#annotation_col = data.frame(LeukemiaType =substr(colnames(mat),1,3))
annotation_col = data.frame(Tissue = meta_ord$Biosample.term.name)
rownames(annotation_col) = meta_ord$File.accession
log_fpkm_sub <- log_fpkm[, c(colnames(log_fpkm) %in%  meta_ord$File.accession)]
vars <- apply(log_fpkm_sub, 1, var)
# order variances based on magnitude of variance
vars <- rev(vars[order(vars)])
# plot variance for genes accross samples
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
# perform PCA and order by variance
vars_sub <- vars[1:1000]
head(vars_sub)
mat <- log_fpkm_sub[names(vars_sub), ]
mat_scaled = t(apply(mat, 1, scale))
colnames(mat_scaled) <- colnames(mat)
mat_scaled <- mat_scaled[, c(match(meta_ord$File.accession, colnames(mat_scaled)))]
library(pheatmap)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
#scale = "none",
cluster_cols = TRUE,
#clustering_method = "average",
clustering_distance_cols = "correlation")
table(meta$Biosample.term.name)
# read in data
fpkm <- read.table("~/fpkm_sub.txt", stringsAsFactors = FALSE, header=TRUE)
meta <- read.delim("~/metadata_sub.tsv", stringsAsFactors = FALSE, header = TRUE)
# log transform fpkm counts
log_fpkm <- log2(fpkm+1)
meta_ord <- meta[order(meta$Biosample.term.name),]
table(meta$Biosample.term.name)
table(meta_ord$Biosample.term.name)
pca_df
View(pca_df)
table(pca_df$tissue)
# plot PC1 vs PC2
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 for ", 5000, " most variable genes"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = unique(pca_df$col), cex = 0.6)
levels(pca_df$tissue)
pca_df$col
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = c(1:length(levels(pca_df$tissue))), cex = 0.6)
# plot PC1 vs PC2
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 for ", 5000, " most variable genes"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = c(1:length(levels(pca_df$tissue))), cex = 0.6)
table(meta_ord$Biosample.term.name)
meta_ord <- meta[order(meta$Biosample.term.name),]
meta_ord <- meta[meta$Biosample.term.name=="forebrain" | meta$Biosample.term.name=="heart" |
meta$Biosample.term.name=="hindbrain" | meta$Biosample.term.name=="liver" |
meta$Biosample.term.name=="skeletal muscle tissue",]
#annotation_col = data.frame(LeukemiaType =substr(colnames(mat),1,3))
annotation_col = data.frame(Tissue = meta_ord$Biosample.term.name)
rownames(annotation_col) = meta_ord$File.accession
log_fpkm_sub <- log_fpkm[, c(colnames(log_fpkm) %in%  meta_ord$File.accession)]
vars <- apply(log_fpkm_sub, 1, var)
# order variances based on magnitude of variance
vars <- rev(vars[order(vars)])
# plot variance for genes accross samples
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
# perform PCA and order by variance
vars_sub <- vars[1:1000]
head(vars_sub)
mat <- log_fpkm_sub[names(vars_sub), ]
mat_scaled = t(apply(mat, 1, scale))
colnames(mat_scaled) <- colnames(mat)
mat_scaled <- mat_scaled[, c(match(meta_ord$File.accession, colnames(mat_scaled)))]
library(pheatmap)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
#scale = "none",
cluster_cols = TRUE,
#clustering_method = "average",
clustering_distance_cols = "correlation")
meta_ord <- meta[meta$Biosample.term.name=="forebrain" | meta$Biosample.term.name=="heart" |
meta$Biosample.term.name=="hindbrain" | meta$Biosample.term.name=="liver" |
meta$Biosample.term.name=="adrenal gland",]
#annotation_col = data.frame(LeukemiaType =substr(colnames(mat),1,3))
annotation_col = data.frame(Tissue = meta_ord$Biosample.term.name)
rownames(annotation_col) = meta_ord$File.accession
log_fpkm_sub <- log_fpkm[, c(colnames(log_fpkm) %in%  meta_ord$File.accession)]
vars <- apply(log_fpkm_sub, 1, var)
# order variances based on magnitude of variance
vars <- rev(vars[order(vars)])
# plot variance for genes accross samples
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
# perform PCA and order by variance
vars_sub <- vars[1:1000]
head(vars_sub)
mat <- log_fpkm_sub[names(vars_sub), ]
mat_scaled = t(apply(mat, 1, scale))
colnames(mat_scaled) <- colnames(mat)
mat_scaled <- mat_scaled[, c(match(meta_ord$File.accession, colnames(mat_scaled)))]
library(pheatmap)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
#scale = "none",
cluster_cols = TRUE,
#clustering_method = "average",
clustering_distance_cols = "correlation")
table(meta_ord$Biosample.term.name)
table(meta$Biosample.term.name)
meta_ord <- meta[order(meta$Biosample.term.name),]
meta_ord <- meta[meta$Biosample.term.name=="forebrain" | meta$Biosample.term.name=="heart" |
meta$Biosample.term.name=="hindbrain" | meta$Biosample.term.name=="liver" |
meta$Biosample.term.name=="adrenal gland",]
#annotation_col = data.frame(LeukemiaType =substr(colnames(mat),1,3))
annotation_col = data.frame(Tissue = meta_ord$Biosample.term.name)
rownames(annotation_col) = meta_ord$File.accession
log_fpkm_sub <- log_fpkm[, c(colnames(log_fpkm) %in%  meta_ord$File.accession)]
vars <- apply(log_fpkm_sub, 1, var)
# order variances based on magnitude of variance
vars <- rev(vars[order(vars)])
# plot variance for genes accross samples
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
# perform PCA and order by variance
vars_sub <- vars[1:1000]
head(vars_sub)
mat <- log_fpkm_sub[names(vars_sub), ]
mat_scaled = t(apply(mat, 1, scale))
colnames(mat_scaled) <- colnames(mat)
mat_scaled <- mat_scaled[, c(match(meta_ord$File.accession, colnames(mat_scaled)))]
library(pheatmap)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
#scale = "none",
cluster_cols = TRUE,
#clustering_method = "average",
clustering_distance_cols = "correlation")
# perform PCA and order by variance
vars_sub <- vars[1:5000]
head(vars_sub)
mat <- log_fpkm_sub[names(vars_sub), ]
mat_scaled = t(apply(mat, 1, scale))
colnames(mat_scaled) <- colnames(mat)
mat_scaled <- mat_scaled[, c(match(meta_ord$File.accession, colnames(mat_scaled)))]
library(pheatmap)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
#scale = "none",
cluster_cols = TRUE,
#clustering_method = "average",
clustering_distance_cols = "correlation")
# plot variance for genes accross samples
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
# perform PCA and order by variance
vars_sub <- vars[1:2000]
head(vars_sub)
mat <- log_fpkm_sub[names(vars_sub), ]
mat_scaled = t(apply(mat, 1, scale))
colnames(mat_scaled) <- colnames(mat)
mat_scaled <- mat_scaled[, c(match(meta_ord$File.accession, colnames(mat_scaled)))]
library(pheatmap)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
#scale = "none",
cluster_cols = TRUE,
#clustering_method = "average",
clustering_distance_cols = "correlation")
# plot PC1 vs PC2
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 for ", 5000, " most variable genes"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = c(1:length(levels(pca_df$tissue))), cex = 0.6)
c(1:length(levels(pca_df$tissue)))
meta_ord <- meta[meta$Biosample.term.name=="forebrain" | meta$Biosample.term.name=="heart" |
meta$Biosample.term.name=="limb" | meta$Biosample.term.name=="liver" |
meta$Biosample.term.name=="intestine",]
#annotation_col = data.frame(LeukemiaType =substr(colnames(mat),1,3))
annotation_col = data.frame(Tissue = meta_ord$Biosample.term.name)
rownames(annotation_col) = meta_ord$File.accession
log_fpkm_sub <- log_fpkm[, c(colnames(log_fpkm) %in%  meta_ord$File.accession)]
vars <- apply(log_fpkm_sub, 1, var)
# order variances based on magnitude of variance
vars <- rev(vars[order(vars)])
# plot variance for genes accross samples
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
# perform PCA and order by variance
vars_sub <- vars[1:2000]
head(vars_sub)
mat <- log_fpkm_sub[names(vars_sub), ]
mat_scaled = t(apply(mat, 1, scale))
colnames(mat_scaled) <- colnames(mat)
mat_scaled <- mat_scaled[, c(match(meta_ord$File.accession, colnames(mat_scaled)))]
library(pheatmap)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
#scale = "none",
cluster_cols = TRUE,
#clustering_method = "average",
clustering_distance_cols = "correlation")
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
scale = "none",
cluster_cols = TRUE,
clustering_method = "average",
clustering_distance_cols = "correlation")
library(RColorBrewer )
library(RColorBrewer)
colorRamp2(c(-3, 0, 3), c("blue", "white", "red"))
library(circlize)
col = colorRamp2(c(-3, 0, 3), c("blue", "white", "red"))
col
intestine?brewer.pal
?brewer.pal
cols2 <- brewer.pal(17)
library(RColorBrewer)
library(colorRamps)
m <- matrix(1:660, 60, 11)
kol <- colors()[m]
op <- par(mar=c(.1, .1, 2, .1))
image(1:11, 1:60, t(m), col=kol, axes=FALSE, ann=FALSE)
kol
grDevices::rainbow()
grDevices::rainbow(12)
cols <- grDevices::rainbow(length(levels(pca_df$tissue)))
cols
for(i in 1:length(levels(pca_df$tissue))){
ind1 <- which(pca_df$tissue == levels(pca_df$tissue)[i])
pca_df$col[ind1] <- cols[i]
}
cols1 <- brewer.pal(11, "Paired")
cols2 <- brewer.pal(17)
# plot PC1 vs PC2
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 for ", 5000, " most variable genes"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = c(1:length(levels(pca_df$tissue))), cex = 0.6)
dev.off()
dev.off()
# plot PC1 vs PC2
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 for ", 5000, " most variable genes"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = c(1:length(levels(pca_df$tissue))), cex = 0.6)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = cols, cex = 0.6)
?grDevices
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
scale = "none",
cluster_cols = TRUE,
clustering_method = "average",
clustering_distance_cols = "correlation")
?pheatmap
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
scale = "none",
cluster_cols = TRUE,
clustering_method = "average",
clustering_distance_cols = "correlation", xlab="Genes")
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
cluster_cols = TRUE,
clustering_method = "average",
clustering_distance_cols = "correlation")
# plot variance for genes accross samples
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
png(paste0("~/BISR/bioinfo-workshop/var-pca.png"),width=6*ppi, height=6*ppi, res=ppi)
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=5000, col="red")
dev.off()
# plot variance for genes accross samples
ppi=300
png(paste0("~/BISR/bioinfo-workshop/var-pca.png"),width=6*ppi, height=6*ppi, res=ppi)
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=5000, col="red")
dev.off()
ppi=300
png(paste0("~/BISR/bioinfo-workshop/pca-plot.png"),width=6*ppi, height=6*ppi, res=ppi)
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 for ", 5000, " most variable genes"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = cols, cex = 0.6)
dev.off()
png(paste0("~/BISR/bioinfo-workshop/var-hclust.png"),width=6*ppi, height=6*ppi, res=ppi)
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
dev.off()
png(paste0("~/BISR/bioinfo-workshop/hclust.png"),width=6*ppi, height=6*ppi, res=ppi)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
cluster_cols = TRUE,
clustering_method = "average",
clustering_distance_cols = "correlation")
dev.off()
png(paste0("~/BISR/bioinfo-workshop/pca-plot.png"),width=10*ppi, height=10*ppi, res=ppi)
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 for ", 5000, " most variable genes"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = cols, cex = 0.6)
dev.off()
# plot variance for genes accross samples
ppi=300
png(paste0("~/BISR/bioinfo-workshop/var-pca.png"),width=9*ppi, height=6*ppi, res=ppi)
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=5000, col="red")
dev.off()
png(paste0("~/BISR/bioinfo-workshop/var-hclust.png"),width=9*ppi, height=6*ppi, res=ppi)
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
dev.off()
ppi=300
png(paste0("~/BISR/bioinfo-workshop/var-hclust.png"),width=9*ppi, height=6*ppi, res=ppi)
plot(vars, las = 1, main="Sample gene expression variance", xlab = "Gene", ylab = "Variance")
abline(v=1000, col="red")
dev.off()
png(paste0("~/BISR/bioinfo-workshop/hclust.png"),width=8*ppi, height=10*ppi, res=ppi)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
cluster_cols = TRUE,
clustering_method = "average",
clustering_distance_cols = "correlation")
dev.off()
png(paste0("~/BISR/bioinfo-workshop/hclust.png"),width=8*ppi, height=9*ppi, res=ppi)
pheatmap(mat_scaled,
show_rownames=FALSE, show_colnames=FALSE,
annotation_col = annotation_col,
cluster_cols = TRUE,
clustering_method = "average",
clustering_distance_cols = "correlation")
dev.off()
ppi=300
png(paste0("~/BISR/bioinfo-workshop/pca-plot.png"),width=10*ppi, height=10*ppi, res=ppi)
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 genome-wide RNA-seq tissue profiles"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = cols, cex = 0.6)
dev.off()
table(pca_df$tissue)
library(pheatmap)
ppi=300
png(paste0("~/BISR/bioinfo-workshop/pca-plot.png"),width=10*ppi, height=10*ppi, res=ppi)
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 genome-wide RNA-seq tissue profiles"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = cols, cex = 0.8)
dev.off()
# plot PC1 vs PC2
ppi=300
png(paste0("~/BISR/bioinfo-workshop/pca-plot.png"),width=10*ppi, height=10*ppi, res=ppi)
plot(pca_df[, 1], pca_df[, 2],
xlab = paste0("PC1 (", (round(percentVar[1], digits=3)*100), "% variance)"),
ylab = paste0("PC2 (", (round(percentVar[2], digits=3)*100), "% variance)"),
main=paste0("PC1 vs PC2 genome-wide RNA-seq tissue profiles"),
pch=16, cex=1.35, cex.lab=1.3, cex.axis = 1.15, las=1,
panel.first = grid(),
col=pca_df$col)
#text((pca_df[, 2])~(pca_df[, 1]), labels = pca_df$tissue, cex=0.6, font=2, pos=4)
legend(1.5, 105, levels(pca_df$tissue), pch = 16, col = cols, cex = 0.9)
dev.off()
350*0.6666
350*1.6666
library(GenomicRanges)
setwd("../omw/Documents/GitHub/Bioinformatics_workshop/Day-3/")
extraCols_narrowPeak <- c(signalValue = "numeric", pValue = "numeric",
qValue = "numeric", peak = "integer")
# read in peaks
bed <- import("data/CTCF-forebrain-mm10.bed",
format="BED",
extraCols = extraCols_narrowPeak,
genome = "mm10")
library(rtracklayer)
extraCols_narrowPeak <- c(signalValue = "numeric", pValue = "numeric",
qValue = "numeric", peak = "integer")
# read in peaks
bed <- import("data/CTCF-forebrain-mm10.bed",
format="BED",
extraCols = extraCols_narrowPeak,
genome = "mm10")
library(BSgenome)
ctcf_seqsgenome <- getBSgenome("BSgenome.Mmusculus.UCSC.mm10")
genome <- getBSgenome("BSgenome.Mmusculus.UCSC.mm10.masked")
ctcf_seqs <- getSeq(genome, bed)
nt_freqs <- alphabetFrequency(ctcf_seqs, baseOnly=TRUE, as.prob=TRUE)
hist(width(ctcf_seqs),
col = "darkgray",
xlab = "Peak width (bp)",
main = "CTCF peak width distribution")
bed_centered <- resize(bed, width = 400, fix = "center")
bed_centered
# check their with
width(bed_centered)
# extract sequences again
ctcf_seqs_cent <- getSeq(genome, bed_centered)
ctcf_seqs_cent
writeXStringSet(ctcf_seqs, file="~/CTCF-peaks-resized.fa")
bed
ctcf_seqs
names(ctcf_seqs) <- paste0("peak", bed$peak))
names(ctcf_seqs) <- paste0("peak", bed$peak)
ctcf_seqs
writeXStringSet(ctcf_seqs, file="~/CTCF-peaks-resized.fa")
bed
names(ctcf_seqs) <- paste0(seqnames(bed), ":", start(bed), "-", end(bed))
ctcf_seqs
writeXStringSet(ctcf_seqs, file="~/CTCF-peaks-resized.fa")
?c
x <- as.character("a", "b", "c", "d")
x <- character("a", "b", "c", "d")
()
x <- character("a", "b", "c", "d")
x <- c(1.63, 2.25, 3.83, 4.99)
x
x <- c(1, 2, 3, 4)
class(x)
?Syntac
?Syntac]x
?Syntacx
?Syntax
mat <- matrix(c(1.63, 2.25, 3.83, 4.99,
2.43, 8.31, 3.12, 7.25,
1.29, 3.23, 3.48, 0.23),
nrow=3, ncol=4)
mat
x <- c(1,2,3,4,5,6,7,8,9)
# create variable to save results to
y <- c()
# define and run the loop
for(i in 1:length(x)){
y[i] <- x[i] * 10
}
return(y)
x <- c(1,2,3,4,5,6,7,8,9)
# create variable to save results to
y <- c()
# define and run the loop
for(i in 1:length(x)){
y[i] <- x[i] * 10
}
return(y)
y
